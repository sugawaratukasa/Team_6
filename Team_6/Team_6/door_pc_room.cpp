//=============================================================================
// ドアの壁の当たり判定用クラス [door_wall_collision.cpp]
// Author : Sugawara Tsukasa
//=============================================================================

//=============================================================================
// インクルード
// Author : Sugawara Tsukasa
//=============================================================================
#include "door_pc_room.h"

//=============================================================================
// マクロ定義
// Author : Sugawara Tsukasa
//=============================================================================

//=============================================================================
// コンストラクタ
// Author : Sugawara Tsukasa
//=============================================================================
CPCRoomDoor::CPCRoomDoor(PRIORITY Priority)
{
}

//=============================================================================
// デストラクタ
// Author : Sugawara Tsukasa
//=============================================================================
CPCRoomDoor::~CPCRoomDoor()
{
}

//=============================================================================
// 生成処理関数
// Author : Sugawara Tsukasa
//=============================================================================
CPCRoomDoor * CPCRoomDoor::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	// CPCRoomKeyのポインタ
	CPCRoomDoor *pPCRoomDoor = nullptr;

	// nullcheck
	if (pPCRoomDoor == nullptr)
	{
		// メモリ確保
		pPCRoomDoor = new CPCRoomDoor;

		// !nullcheck
		if (pPCRoomDoor != nullptr)
		{
			// 初期化処理
			pPCRoomDoor->Init(pos, rot);
		}
	}
	// ポインタを返す
	return pPCRoomDoor;
}

//=============================================================================
// 初期化処理関数
// Author : Sugawara Tsukasa
//=============================================================================
HRESULT CPCRoomDoor::Init(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	// ドアの初期化処理関数呼び出し
	CDoor::Init(pos, rot);
	// タイプを設定する
	SetType(CDoor::DOOR_PC_ROOM);
	return S_OK;
}

//=============================================================================
// 終了処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CPCRoomDoor::Uninit(void)
{
	// ドアの終了処理関数呼び出し
	CDoor::Uninit();
}

//=============================================================================
// 更新処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CPCRoomDoor::Update(void)
{
	// ドアの更新処理関数呼び出し
	CDoor::Update();
}

//=============================================================================
// 描画処理関数
// Author : Sugawara Tsukasa
//=============================================================================
void CPCRoomDoor::Draw(void)
{
	// ドアの描画処理関数呼び出し
	CDoor::Draw();
}
