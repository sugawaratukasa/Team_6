//=============================================================================
//
// 監視カメラ情報管理処理 [Camera_Security.cpp]
// Author : 樋宮 匠
//
//=============================================================================

//*****************************************************************************
// インクルードファイル
//*****************************************************************************
#include "Camera_Security.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CCameraSecurity::CCameraSecurity()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CCameraSecurity::~CCameraSecurity()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CCameraSecurity::Init(D3DXVECTOR3 pos, float fDir)
{
	m_pos = pos;
	m_fDir = fDir;
	m_fAngle = m_fDir;
	m_fAngleMoveRate = D3DXToRadian(0.1);
	m_nCamReturnCount = 0;

	return S_OK;
}

//=============================================================================
// 更新処理
//=============================================================================
void CCameraSecurity::Update(void)
{
		m_fAngle += m_fAngleMoveRate;

		if (m_fAngle >= m_fDir + SECCAM_ANGLE_MAX ||
			m_fAngle <= m_fDir - SECCAM_ANGLE_MAX)
		{
			m_fAngleMoveRate *= -1;
		}
}

//=============================================================================
// インスタンス生成処理
//=============================================================================
CCameraSecurity * CCameraSecurity::Create(D3DXVECTOR3 pos, float fDir)
{
	CCameraSecurity *pSecCam;
	pSecCam = new CCameraSecurity;
	pSecCam->Init(pos, fDir);

	return pSecCam;
}
