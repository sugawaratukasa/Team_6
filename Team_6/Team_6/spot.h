#ifndef _SPOT_H_
#define _SPOT_H_

//=============================================================================
//
// スポット処理 [spot.h]
// Author : Yamada Ryota
//
//=============================================================================

//=============================================================================
//インクルードファイル
//=============================================================================
#include "main.h"
#include <list>

//=============================================================================
//スポットクラス
//=============================================================================
class CSpot 
{
public:
	//=========================================================================
	//スポット情報の構造体
	//=========================================================================
	struct SPOT_DATA
	{
		D3DXVECTOR3 pos;	//位置
		int nNumBase;		//自分の番号
		list<int> NumNext;	//通行可能な番号
	};

	struct Spot
	{
		
	};
	//=========================================================================
	//メンバ関数宣言
	//=========================================================================
	static CSpot *Create(void);	//クリエイト処理

	CSpot();	//コンストラクタ
	~CSpot();	//デストラクタ

	HRESULT Init(void);	//初期化処理
	void Uninit(void);	//終了処理
	void Update(void);	//更新処理

	int GetSpotNum(void) { return (int)m_SpotData.size(); }	//要素数の取得
	D3DXVECTOR3 GetSpotPos(int nNumBase);					//位置の取得
	list<int> GetNextNumber(int nNumBase);					//ネクストの取得

	SPOT_DATA CloseSpotSearch(const D3DXVECTOR3 pos);
private:
	void LoadSpot(void);	//ファイルの読み込み

	//=========================================================================
	//メンバ変数宣言
	//=========================================================================
	list<SPOT_DATA> m_SpotData;
	
};
#endif // !_SPOT_H_
