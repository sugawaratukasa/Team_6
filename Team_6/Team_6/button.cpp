//=============================================================================
//
// ボタン [button.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "resource_manager.h"
#include "sound.h"
#include "button.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define SELECT_COLOR (D3DXCOLOR(1.0f,1.0f,1.0f,1.0f))		//選択時の色
#define NOT_SELECT_COLOR (D3DXCOLOR(1.0f,1.0f,1.0f,0.5f))	//選択されていないときの色

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CButton::CButton(PRIORITY Priority) : CScene2D(Priority)
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CButton::~CButton()
{
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CButton::Init(D3DXVECTOR3 Position, D3DXVECTOR3 Size)
{
	//シーン2D管理の初期化処理関数呼び出し
	CScene2D::Init(Position, Size);
	//色を設定する
	SetCol(NOT_SELECT_COLOR);
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CButton::Uninit(void)
{
	//シーン2D管理の終了処理関数呼び出し
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CButton::Update(void)
{
	//シーン2D管理の更新処理関数呼び出し
	CScene2D::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CButton::Draw(void)
{
	//シーン2D管理の描画処理関数呼び出し
	CScene2D::Draw();
}

//=============================================================================
// 選択時の色変更処理関数
//=============================================================================
void CButton::ChangeTranslucent(bool bTranslucent)
{
	if (bTranslucent == true)
	{
		//色を変更する
		SetCol(SELECT_COLOR);
	}
	else
	{
		//色を変更する
		SetCol(NOT_SELECT_COLOR);
	}
}

//=============================================================================
// ボタンのSE再生処理関数
//=============================================================================
void CButton::PlayButtonSE(BUTTON_SE PlayButtonSE)
{
	// サウンドの取得
	CSound * pSound = GET_SOUND_PTR;
	// ボタンSEの種類を設定
	BUTTON_SE ButtonSE = PlayButtonSE;
	// もしサウンドのポインタがnullptrではない場合
	if (pSound != nullptr)
	{
		switch (ButtonSE)
		{
		case BUTTON_SE_SELECT:
			// ボタン選択音の再生
			pSound->Play(CSound::SOUND_SE_BUTTON_SELECT);
			break;
		case BUTTON_SE_PUSH:
			// ボタンを押す音の再生
			pSound->Play(CSound::SOUND_SE_BUTTON_PUSH);
			break;
		case BUTTON_SE_CANCEL:
			// ボタンキャンセル音の再生
			pSound->Play(CSound::SOUND_SE_BUTTON_CANCEL);
			break;
		default:
			break;
		}
	}
}

