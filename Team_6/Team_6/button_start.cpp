//=============================================================================
//
// スタートボタン [button_start.cpp]
// Author : 二階堂汰一
//
//=============================================================================

//*****************************************************************************
// ヘッダファイルのインクルード
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "sound.h"
#include "button_start.h"
#include "texture.h"
#include "resource_manager.h"
#include "fade.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************

//*****************************************************************************
// 静的メンバ変数の初期化
//*****************************************************************************

//=============================================================================
// コンストラクタ
//=============================================================================
CStartButton::CStartButton()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CStartButton::~CStartButton()
{
}

//=============================================================================
// 生成処理関数呼び出し
//=============================================================================
CStartButton * CStartButton::Create(D3DXVECTOR3 Position, D3DXVECTOR3 SIze)
{
	//スタートボタンのポインタ
	CStartButton * pStartButton = nullptr;
	//スタートボタンのポインタがnullptrの場合
	if (pStartButton == nullptr)
	{
		//スタートボタンのメモリ確保
		pStartButton = new CStartButton;
		//スタートボタンのポインタがnullptrではない場合
		if (pStartButton != nullptr)
		{
			//スタートボタンの初期化処理関数呼び出し
			pStartButton->Init(Position, SIze);
		}
	}
	//スタートボタンのポインタを返す
	return pStartButton;
}

//=============================================================================
// 初期化処理関数
//=============================================================================
HRESULT CStartButton::Init(D3DXVECTOR3 Position, D3DXVECTOR3 Size)
{
	CButton::Init(Position, Size);
	// テクスチャの設定
	CTexture *pTexture = CManager::GetResourceManager()->GetTextureClass();
	BindTexture(pTexture->GetTexture(CTexture::TEXTURE_NUM_BUTTON_START));
	return S_OK;
}

//=============================================================================
// 終了処理関数
//=============================================================================
void CStartButton::Uninit(void)
{
	//ボタンの終了処理関数呼び出し
	CButton::Uninit();
}

//=============================================================================
// 更新処理関数
//=============================================================================
void CStartButton::Update(void)
{
	//ボタンの更新処理関数呼び出し
	CButton::Update();
}

//=============================================================================
// 描画処理関数
//=============================================================================
void CStartButton::Draw(void)
{
	//ボタンの描画処理関数呼び出し
	CButton::Draw();
}

//=============================================================================
// プレス処理関数
//=============================================================================
void CStartButton::Press(void)
{
	//押したときのサウンド再生
	PlayButtonSE(CButton::BUTTON_SE_PUSH);
	//画面遷移
	ModeTransition();
}

//=============================================================================
// モード遷移
//=============================================================================
void CStartButton::ModeTransition(void)
{
	// 遷移
	CFade *pFade = CManager::GetFade();
	pFade->SetFade(CManager::MODE_TYPE_GAME);
}