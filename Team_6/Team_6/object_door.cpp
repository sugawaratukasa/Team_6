//=============================================================================
// ドア [object_door.cpp]
// Author : Nikaido Taichi
//=============================================================================

//=============================================================================
// マクロ定義
// Author : Nikaido Taichi
//=============================================================================

//=============================================================================
// インクルードファイル
// Author : Nikaido Taichi
//=============================================================================
#include "manager.h"
#include "resource_manager.h"
#include "object_door.h"

//=============================================================================
// コンストラクタ
// Author : Nikaido Taichi
//=============================================================================
CDoor::CDoor(PRIORITY Priority)
{
	m_Type = DOOR_NONE;		// ドアの種類
	m_bLock = true;			// ロック状態
}

//=============================================================================
// デストラクタ
// Author : Nikaido Taichi
//=============================================================================
CDoor::~CDoor()
{
}
//=============================================================================
// 生成処理関数
// Author : Nikaido Taichi
//=============================================================================
CDoor * CDoor::Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	// CDoorのポインタ
	CDoor *pDoor = nullptr;

	// nukkcheck
	if (pDoor == nullptr)
	{
		// メモリ確保
		pDoor = new CDoor;

		// !nullchcek
		if (pDoor != nullptr)
		{
			// 初期化処理
			pDoor->Init(pos, rot);
		}
	}
	// ポインタを返す
	return pDoor;
}

//=============================================================================
// 初期化処理関数
// Author : Nikaido Taichi
//=============================================================================
HRESULT CDoor::Init(D3DXVECTOR3 pos, D3DXVECTOR3 rot)
{
	// 初期化処理
	CObject::Init(pos, rot);

	// モデル情報取得
	CXfile *pXfile = CManager::GetResourceManager()->GetXfileClass();

	// !nullcheck
	if (pXfile != nullptr)
	{
		// モデル情報取得
		CXfile::MODEL model = pXfile->GetXfile(CXfile::XFILE_NUM_DOOR);

		// モデルの情報を渡す
		BindModel(model);
	}
	return S_OK;
}

//=============================================================================
// 終了処理関数
// Author : Nikaido Taichi
//=============================================================================
void CDoor::Uninit(void)
{
	// 終了処理
	CObject::Uninit();
}
//=============================================================================
// 更新処理関数
// Author : Nikaido Taichi
//=============================================================================
void CDoor::Update(void)
{
	// 更新処理
	CObject::Update();
}
//=============================================================================
// 描画処理関数
// Author : Nikaido Taichi
//=============================================================================
void CDoor::Draw(void)
{
	// 描画処理
	CObject::Draw();
}